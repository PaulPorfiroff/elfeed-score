2021-02-24  Michael Herstine  <sp1ff@pobox.com>

	Write a backup copy of the score file on version upgrade.
	This commit adds a minor new feature: if elfeed-score detects,
	on loading the score file, that the format version has changed,
	it will write a backup copy of the score file.

2021-02-20  Michael Herstine  <sp1ff@pobox.com>

	Introduce score file format version 6.
	With this commit, elfeed-score will serialize scoring rules as
	property lists, rather than flat lists. It will, of course,
	continue to read all prior versions of the score file format.

	Moving to property lists for the rule format, while more prolix,
	will reduce errors on the part of rule authors & enable better
	validation & error messages on the part of the package.

2021-02-08  Michael Herstine  <sp1ff@pobox.com>

	Stop packages from referring to private symbols in other packages.
	Post-re-factor, there were a few cases of one package referring
	to a prinvate symbol defined in another package. This commit
	eliminates that, albeit by simply renaming the referenced
	private symbosl to be public.

2021-02-06  Michael Herstine  <sp1ff@pobox.com>

	Update my Github workflows.
	This commit:

	  - updates the release workflow to add the stock Emacs package
	    file (elfeed-score-x.y.z.tar) to the release
	  - adds a workflow just for the 0.7 branch that will create
	    alpha releases

2021-02-06  Michael Herstine  <sp1ff@pobox.com>

	Major re-work of the elfeed-score documentation.
	This commit breaks-up the bloated README:

	  - introductory information & installation instructions remain
	    in the README
	  - user documentation has been moved to a Texinfo manual
	  - developer documentation has been moved to the project Wiki

2021-01-31  Michael Herstine  <sp1ff@pobox.com>

	Re-factor 'elfeed-score.el'.
	'elfeed-score.el' has grown to over 2K lines. Consequently, it
	has become difficult to read, maintain & reason about. This commit:

	    - breaks 'elfeed-score.el' up into several smaller files
	    - changes the variable & function names in these new files to
	      begin with their new prefix:
	      - public symbols have aliases defined
	      - private symols were just renamed-- if you were accessing
	        these symbols in your code, it will break(!)

	All lints now pass, as well as all unit tests. Still, this is a
	major, breaking change & is not ready for release, yet.

2021-01-29  Michael Herstine  <sp1ff@pobox.com>

	Squashing commits fixing assorted issues raised by firmart:
	  - Fix issue #6.

	    Correct the bad "authors" clause in the sample 'elfeed.score' in
	    the README. Thank Firmin for noting this.

	  - Fix issue #9.

	    Correct the 'elfeed-score-explain' docstring.

	  - Address issue #7.

	    This comes down to better validation on loading of score file.
	    I updated the constructor to use (arguably abuse) the '&aux'
	    CL keyword to validate the parmeters.

2020-12-19  Michael Herstine  <sp1ff@pobox.com>

	Address a final nit in issue #2: make 'elfeed-score-explain-entry' non-interactive.

	Getting the release workflow working.

	Docs-only commit: updated the README with new installation instructions & a mention of 'elfeed-score-explain-entry'.

2020-12-13  Michael Herstine  <sp1ff@pobox.com>

	Re-implemented the "explain" feature & added unit tests.

2020-12-05  Michael Herstine  <sp1ff@pobox.com>

	BUGFIX: 'elfeed-score--pp-rule-match-to-string' wasn't handling tag rules correctly.
	Also took the opportunity to fix typos in both my GitHub Actions
	workflows.

2020-12-04  Michael Herstine  <sp1ff@pobox.com>

	'elfeed-score-explain'
	This commit addresses #5 -- "Feature Request: `elfeed-score-explain`
	function" by re-factoring the scoring routines to apply an arbitrary
	lambda on all matches. The scoring functions have been re-worked to
	use this framework: on match, they just add the relevant value to
	the entry score. I then introduced a new function corresponding
	to each scoring function-- an "explain" variant. It walks the relevant
	scoring rules, but records matches instead of totalling up a score.

	Finally, I implemented 'elfeed-score-explain'-- an interactive function
	that will print out the matches in a dedicated buffer.

	Finally, I added two GitHub actions:

	    1. one that runs Chris Raynor's (@riscy) "melpazoid" linter against
	       all commits & PRs

	     2. a release workflow that will create a GitHub release whenever
	        a release is tagged (copied shamlessly from Burnt Sushi)

2020-11-01  Michael Herstine  <sp1ff@pobox.com>

	Documentation updates prior to releasing 0.5.5.

2020-10-31  Michael Herstine  <sp1ff@pobox.com>

	Add reporting on rules by number of match hits.

	Add the ability to report rules by last match date.

2020-10-30  Michael Herstine  <sp1ff@pobox.com>

	Scoping rules by feed.
	This commit implements a new feature: scoping rules by feed.

	It also adds a "hit count" to all rules.

2020-10-25  Michael Herstine  <sp1ff@pobox.com>

	BUGFIX: issue #4
	let-bind 'print-le{vel,ngth}' to nil before calling 'pp-to-string'.

2020-08-10  Michael Herstine  <sp1ff@pobox.com>

	Merge branch 'C-J-Cundy-master'

	Preparing to merge C-J-Cundy's PR https://github.com/sp1ff/elfeed-score/pull/3:
	  - Minor touch-ups to the PR
	  - Added unit tests; updated maintainer's files

2020-08-04  Chris Cundy  <chris.j.cundy@gmail.com>

	Added description of `authors` matching to README

2020-07-30  Chris Cundy  <chris.j.cundy@gmail.com>

	Adds in scoring by author
	This adds in a new field to score entries against: author.
	Uses the entry :author metadata to concatenate all the authors'
	names together. This string is then matched on in the same way as
	e.g. the contents string is matched on.

2020-03-28  Michael Herstine  <sp1ff@pobox.com>

	Fix Issue #2: "(elfeed-score-enable) must have an argument now, unlike README suggests"
	I foolishly forgot the `&optional' keyword; fixed & I'm working on
	some non-ERT tests to catch this going forward (those tests aren't
	committed yet).

2020-03-22  Michael Herstine  <sp1ff@pobox.com>

	Final pre-release fixes.
	    1. format scores properly before displaying

	    2. give `elfeed-score-enable' a prefix arg; if present, do
	       *not* install the sort function. This is to accomodate
	       people who have already customized the sort function.

	    3. BUGFIX: `elfeed-score-unload' had been pulled into the
	       definition of `elfeed-score-enable' (?)

	    4. update README.org

2020-03-21  Michael Herstine  <sp1ff@pobox.com>

	Added a maximum size to the log buffer, along with `elfeed-score--{set-score-on,get-score-from}-entry.
	This commit:

	    1. adds variable `elfeed-score-max-log-buffer-size', an upper
	       bound on the number of lines in the elfeed log buffer

	    2. adds two internal convenience functions for setting &
	       getting the score of an entry, resp.

	       - elfeed-score--set-score-on-entry
	       - elfeed-score--get-score-from-entry

2020-03-15  Michael Herstine  <sp1ff@pobox.com>

	Two new scoring rules: tag, and adjust-tags.
	This commit adds two new scoring rules (and bumps the score file
	version to 3):

	    1. tag: adjust an entry's score up or down based on the presence
	       or absence of one or more tags
	    2. adjust-tags: after the scoring process is complete, add
	       or remove tags based on the score being above or below
	       given thresholds.

2020-03-14  Michael Herstine  <sp1ff@pobox.com>

	Much-improved logging.
	This commit introduces the *elfeed-score* log buffer, modeled on
	`elfeed-log', to which much more detailed messages are sent. The
	verbosity can be controlled by `elfeed-score-log-level'.

2020-02-21  Michael Herstine  <sp1ff@pobox.com>

	Change `assoc-delete-all' to `cl-delete' to avoid having to depend on a later version of Emacs.
	Move the struct definitions ahead of their use, to ease re-loading.

2020-02-21  Michael Herstine  <sp1ff@pobox.com>

	This commit squashes a few bugs:
	    1. if `version' isn't mentioned in a score file, just assume it's
	       in the latest format

	    2. feed rules without tag scoping were being serializsed with a
	       needless trailing `nil'

	    3. all rules other than titles were failing to read tag-scoping
	       rules on creation

	    4. fixed a typo in the unit test names

	    5. log more detailed information when `elfeed-score-debug' is t
	       and a rule matches

2020-02-15  Michael Herstine  <sp1ff@pobox.com>

	This commit some additional, new scoring features for score file version 2:
	    1. tag-specific rules: any rule can now be made to apply only when

	       - any of one or more tags are present in the entry being scored

	       - none of one or more tags are present in the entry being scored

	    2. whole-word matching: in addition to string & regex matching, rules
	       can be matched using whole-word regex matching

2020-02-12  Michael Herstine  <sp1ff@pobox.com>

	Score file version 2.
	This commit does the following:

	    1. re-implements the scoring rules in terms of structs (instead)
	       of property lists

	    2. re-wrote the score file parsing logic to separate the file
	       I/O from the parsing of the score sexp.

	    3. bumps the score file format version to 2

	       - adds a new rule type "title-or-content"

	       - permits the version element of the sexp to be keyed either
	         string or symbol

	NB. Whenever the score file is written out, it will be in version
	2 format.

2020-01-19  Michael Herstine  <mherstin@linkedin.com>

	Add the option to display entry scores in *elfeed-search*.
	This commit:

	    1. provides a new function, `elfeed-score-print-entry', which
	       can be used as the value of `elfeed-search-print-entry-function`;
	       when this is done, the entry score will be printed in the
	       first column of the search buffer

	    2. the format of the score is determined by a new customization
	       variable `elfeed-score-score-format'

	Note that the print function will not be substituted when
	`elfeed-score-enable` is invoked; you must do this explicitly in
	your configuration if you want this feature. However,
	`elfeed-score-unload` will remove it, if found.

2020-01-15  Michael  <sp1ff@pobox.com>

	Merge pull request #1 from Miciah/fix-package-URL-in-commentary
	Fix package URL in commentary

2020-01-14  Miciah Masters  <miciah.masters@gmail.com>

	Fix package URL in commentary
	Replace "emacs-score" with "elfeed-score" in the package URL.

	* elfeed-score.el: Fix package URL in commentary.

2020-01-04  Michael Herstine  <sp1ff@pobox.com>

	Minor textual changes:
	    1. Updated README to reflect the fact that this package has been accepted into MELPA

	    2. Updated copyright statements in source

2019-12-23  Michael Herstine  <sp1ff@pobox.com>

	Preparation for submission to MELPA.
	This commit prepares `elfeed-score' for submission to MELPA:

	    1. The naming scheme for public symbols changed from "elfeed-score/"
	       to "elfeed-score-" (in accordance with the Emacs Lisp Coding
	       Conventions. Aliases are defined for all 0.1 symbols.

	    2. Docstrings are now `checkdoc'-compliant.

	    3. Loading the package no longer affects Elfeed; the package
	       must be enabled via a call to `elfeed-score-enable', and may
	       be unloaded via `elfeed-score-unload' (again in accordance
	       with the Emacs Lisp Coding Conventions).

	    4. Miscellaneous other udpates (addition of a Package-Requires
	       header & and autoload, e.g.)

2019-12-20  Michael Herstine  <sp1ff@pobox.com>

	Initial commit of elfeed-score
